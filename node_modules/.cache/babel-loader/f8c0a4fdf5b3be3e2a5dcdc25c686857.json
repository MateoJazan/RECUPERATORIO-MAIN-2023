{"ast":null,"code":"var _jsxFileName = \"/home/mateo/Documents/DH/Front3/recuperatorio/RECUPERATORIO-MAIN-2023/src/componentes/Tarjeta.js\";\nimport { Item } from \"./Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst listadoPlataformas = [\"Twitter\", \"Facebook\", \"Youtube\"]; // CONSIGNAS EN TARJETA:\n// 1- Importar Item\n// 2- Utilizar el listadoPlataformas para renderizar la cantidad de Items acorde al array ðŸš©\n// 3- Cada item debe tener como propiedades su key, pasar el metodo para elegir como favorita heradado por su padre y presentar el nombre de la plataforma\n// El componente Tarjeta es el padre de:\n// - varios Item\n// ESTADO: Listado no necesita manejar un estado.\n// MÃ‰TODOS: Listado no requiere de mÃ©todos.\n// PROPS: Listado recibe el mÃ©todo heredado de App y se lo pasa a cada Item.\n\nexport const Tarjeta = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children:\n      /* ðŸš© Implementar acÃ¡ */\n      listadoPlataformas.map(plataforma => {\n        return /*#__PURE__*/_jsxDEV(Item, {\n          plataforma: plataforma,\n          metodoFavorita: props.metodoFavorita\n        }, plataforma + \"_item\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = Tarjeta;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tarjeta\");","map":{"version":3,"names":["Item","listadoPlataformas","Tarjeta","props","map","plataforma","metodoFavorita"],"sources":["/home/mateo/Documents/DH/Front3/recuperatorio/RECUPERATORIO-MAIN-2023/src/componentes/Tarjeta.js"],"sourcesContent":["import { Item } from \"./Item\";\n\nconst listadoPlataformas = [\"Twitter\", \"Facebook\", \"Youtube\"];\n\n\n// CONSIGNAS EN TARJETA:\n// 1- Importar Item\n// 2- Utilizar el listadoPlataformas para renderizar la cantidad de Items acorde al array ðŸš©\n// 3- Cada item debe tener como propiedades su key, pasar el metodo para elegir como favorita heradado por su padre y presentar el nombre de la plataforma\n\n// El componente Tarjeta es el padre de:\n// - varios Item\n// ESTADO: Listado no necesita manejar un estado.\n// MÃ‰TODOS: Listado no requiere de mÃ©todos.\n// PROPS: Listado recibe el mÃ©todo heredado de App y se lo pasa a cada Item.\n\nexport const Tarjeta = (props) => {\n  return (\n    <>\n    <ul>\n      {/* ðŸš© Implementar acÃ¡ */\n      listadoPlataformas.map((plataforma) =>{\n        return <Item key={plataforma+\"_item\"} plataforma={plataforma} metodoFavorita={props.metodoFavorita}/>\n      })\n      }      \n    </ul>\n    </>\n  );\n}\n"],"mappings":";AAAA,SAASA,IAAT,QAAqB,QAArB;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,SAAxB,CAA3B,C,CAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAChC,oBACE;IAAA,uBACA;MAAA;MACG;MACDF,kBAAkB,CAACG,GAAnB,CAAwBC,UAAD,IAAe;QACpC,oBAAO,QAAC,IAAD;UAA+B,UAAU,EAAEA,UAA3C;UAAuD,cAAc,EAAEF,KAAK,CAACG;QAA7E,GAAWD,UAAU,GAAC,OAAtB;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAFD;IAFF;MAAA;MAAA;MAAA;IAAA;EADA,iBADF;AAWD,CAZM;KAAMH,O"},"metadata":{},"sourceType":"module"}